draw_bold_text_with_bright_colors: true

# Cyberpunk-Neon colours
colors:
  # Default colours
  primary:
    background: '0x000b1e'
    foreground: '0x0abdc6'

  # Colors that should be used to draw the terminal cursor. If these are unset,
  # the cursor colour will be the inverse of the cell colour.
  # cursor:
  #   text: '0x2e2e2d'
  #   # text: '0x000000'
  #   cursor: '0xffffff'

  # Normal colors
  normal:
    black:   '0x123e7c'
    red:     '0xff0000'
    green:   '0xd300c4'
    yellow:  '0xf57800'
    blue:    '0x123e7c'
    magenta: '0x711c91'
    cyan:    '0x0abdc6'
    white:   '0xd7d7d5'

  # Bright colors
  bright:
    black:   '0x1c61c2'
    red:     '0xff0000'
    green:   '0xd300c4'
    yellow:  '0xf57800'
    blue:    '0x00ff00'
    magenta: '0x711c91'
    cyan:    '0x0abdc6'
    white:   '0xd7d7d5'

  # dim colors
  dim:
    black:   '0x1c61c2'
    red:     '0xff0000'
    green:   '0xd300c4'
    yellow:  '0xf57800'
    blue:    '0x123e7c'
    magenta: '0x711c91'
    cyan:    '0x0abdc6'
    white:   '0xd7d7d5'

window:
  padding:
    x: 30
    y: 30
  # scrolling:
  #   # Maximum number of lines in the scrollback buffer.
  #   # Specifying '0' will disable scrolling.
  history: 10000
  #   # Number of lines the viewport will move for every line scrolled when
  #   # scrollback is enabled (history > 0).
  #   multiplier: 10

  # # If `true`, bold text is drawn using the bright color variants.
  # draw_bold_text_with_bright_colors: true

  # selection:
  semantic_escape_chars: ',â”‚`|:"'' ()[]{}<>'
  save_to_clipboard: true
  live_config_reload: true
key_bindings:
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: Key0, mods: Control, action: ResetFontSize }
  - { key: Equals, mods: Control, action: IncreaseFontSize }
  # - { key: Add, mods: Control, action: IncreaseFontSize }
  # - { key: Subtract, mods: Control, action: DecreaseFontSize }
  - { key: Minus, mods: Control, action: DecreaseFontSize }
  - { key: N, mods: Control, action: SpawnNewInstance }